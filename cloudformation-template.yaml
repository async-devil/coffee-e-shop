AWSTemplateFormatVersion: 2010-09-09
Description: Coffee e-shop cloudformation template

Parameters:
  ImagesBucketName:
    Type: String
    Default: coffee-e-shop-images
    Description: The name of the S3 Bucket to create

Resources:
  IAMShopAdmin:
    Type: AWS::IAM::User
    Properties:
      UserName: coffee-e-shop-admin

  NodeBackend:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-051f7e7f6c2f40dc1
      KeyName: aws-key-coffee-e-shop
      SecurityGroups:
        - !Ref NodeBackendSecurityGroup
      UserData: !Base64 |
        #!/bin/bash
        sudo yum update -y
        sudo yum search docker
        sudo yum info docker
        sudo yum install docker -y

        wget https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) 
        sudo mv docker-compose-$(uname -s)-$(uname -m) /usr/local/bin/docker-compose
        sudo chmod -v +x /usr/local/bin/docker-compose

        sudo systemctl enable docker.service
        sudo systemctl start docker.service

  NodeBackendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow ssh, http and docker ports
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  S3ImagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ImagesBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter

  S3ImagesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3ImagesBucket
      PolicyDocument:
        Id: S3ImagesBucketPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Action: s3:GetObject
            Principal: "*"
            Resource: !Sub "arn:aws:s3:::${S3ImagesBucket}/*"

          - Sid: WriteAndDeleteForBucketOwner
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:DeleteObject
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:user/${IAMShopAdmin}"
            Resource: !Sub "arn:aws:s3:::${S3ImagesBucket}/*"
