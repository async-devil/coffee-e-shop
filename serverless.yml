service: coffee-e-shop

frameworkVersion: "3"

plugins:
  - serverless-plugin-typescript
  - serverless-plugin-optimize
  - serverless-dynamodb-local
  - serverless-s3-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  apiGateway:
    shouldStartNameWithService: true

  environment:
    DYNAMODB_ENDPOINT: ${self:custom.endpoints.dynamodbURL}
    S3_ENDPOINT: ${self:custom.endpoints.s3URL}

    IMAGES_BUCKET_NAME: ${self:service}-images-bucket
    USERS_TABLE_NAME: ${self:service}-users-table
    UNIQUES_TABLE_NAME: ${self:service}-uniques-table

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:DescribeTable"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"

      Resource: arn:aws:dynamodb:${self:provider.region}:*:*

    - Effect: "Allow"
      Action:
        - "s3:*Object"

      Resource: arn:aws:s3:::${self:provider.environment.IMAGES_BUCKET_NAME}/*

functions:
  Nestjs-backend:
    handler: src/lambda.handler
    memorySize: 256

    events:
      - http:
          method: any
          path: /{proxy+}

resources:
  Resources:
    ImagesBucket: ${file(resources/ImagesBucket.yml)}
    UsersTable: ${file(resources/UsersTable.yml)}
    UniquesTable: ${file(resources/UniquesTable.yml)}

custom:
  s3:
    host: localhost
    directory: /tmp

  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      migrate: true

  endpoints:
    dynamodbURL: http://localhost:8000
    s3URL: http://localhost:4569
